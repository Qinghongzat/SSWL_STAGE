<?php
/**
 * Create by PhpStorm
 * User: zat
 * Date: 2021-01-19
 * Time: 9:22
 */

namespace app\models;


use yii\behaviors\AttributeBehavior;
use yii\db\ActiveRecord;
use Yii;

class ApprovalManagement extends ActiveRecord
{
    public $_uid;
    public $_username;
    public $attach = array();
    public $am_statuss = [1=>'Pending',2=>'Approved',3=>'Rejected'];


    public function init()
    {
        $this->_uid = Yii::$app->session->get('ur_uid');
        $this->_username = Yii::$app->session->get('username');
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function scenarios()
    {
        return [
            'default'=>[
                model_column
            ]
        ];
    }

    public function rules()
    {
        return [
            ['_id', 'required', 'message' => '_id cannot be empty'], //必选字段
        ];
    }

    public function behaviors()
    {
        return [
            [
                'class' => AttributeBehavior::className(),
                'attributes' => [ActiveRecord::EVENT_BEFORE_INSERT => '_createtime'],
                'value' => time(),
            ],
            [
                'class' => AttributeBehavior::className(),
                'attributes' => [ActiveRecord::EVENT_BEFORE_UPDATE => '_lastupdatime'],
                'value' => time(),
            ],
            [
                'class' => AttributeBehavior::className(),
                'attributes' => [ActiveRecord::EVENT_BEFORE_INSERT => '_create_uid'],
                'value' => $this->_uid,
            ],
            [
                'class' => AttributeBehavior::className(),
                'attributes' => [ActiveRecord::EVENT_BEFORE_INSERT => '_create_username'],
                'value' => $this->_username,
            ],
        ];
    }

    public function getCount($option)
    {
        $where = $this->_getWhere($option);
        return self::find()->where($where)->count();
    }


    public function getList($option, $limit = 10, $offset = 0)
    {
        $where = $this->_getWhere($option);
        return self::find()->where($where)->orderBy('_createtime desc')->limit($limit)->offset($offset)->asArray()->all();
    }

    public function _getWhere($option)
    {
        $where = [ '_visible' => 1 ];
        foreach ($option as $key => $value)
        {
            if (strlen($value) == 0) {
                continue;
            }

            if(in_array($key,['at_id','am_status','am_applicant_id'])){
                $where[] = $key . ' = ' . (int)$value;
            } elseif (in_array($key, array('am_to_no'))) {
                $where[] = "$key LIKE '%" . trim($value) . "%'";
            } elseif (in_array($key, array('am_approver'))) {
                $where[] = "$key LIKE '%" . trim($value) . "%'";
            } elseif ($key == 'start_time'){
                $where[] = 'am_submission_time >=' . (int)strtotime($value);
            } elseif ($key == 'end_time'){
                $where[] = 'am_submission_time <' . (int)(strtotime($value) + 86400);
            }

        }

        $where = join(' AND ', $where);

        return $where;
    }

    /**
     * writeLog
     * @author zat     2021-01-28
     * @param $info
     */
    public static function writeLog($info)
    {
        /**
         * 第一部分路径
         */
        $dirPath = $_SERVER['DOCUMENT_ROOT'].'/logs';

        if (!is_dir($dirPath)) {
            @mkdir($dirPath);
        }
        $dirPath .= '/' . date('Y').date('m').'something'. '.log';

        /**
         * 第二部分
         */
        file_put_contents($dirPath , "\n\n" . date('Y-m-d H:i:s') . "\n", FILE_APPEND);
        file_put_contents($dirPath , "info : ".$info.' ,', FILE_APPEND);
        file_put_contents($dirPath , "操作人 : ".$_SESSION['username'].' ,', FILE_APPEND);

    }
}